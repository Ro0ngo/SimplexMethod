plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
    id 'edu.sc.seis.launch4j' version '3.0.6'
}

group 'simplexmetod'
version '1.0-SNAPSHOT'

sourceCompatibility = '21'
targetCompatibility = '21'

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainClass = 'simplexmetod.Control'
}

javafx {
    version = '21'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'org.assertj:assertj-core:3.21.0'
    implementation 'com.google.guava:guava:32.1.1-jre'
    implementation('org.controlsfx:controlsfx:11.1.2')
    implementation 'org.openjfx:javafx-controls:23.0.1'
    implementation 'org.openjfx:javafx-fxml:23.0.1'
}

javadoc {
    options.docTitle = 'Simplex Method'
    options.encoding = 'UTF-8'
    options.docEncoding = 'UTF-8'
    options.charSet = 'UTF-8'
}

test {
    useJUnitPlatform()
}

launch4j {
    outfile = 'OptimizationsMethod.exe' // Имя .exe файла
    mainClassName = 'simplexmetod.Control' // Основной класс
    jarTask = project.tasks.jar // Ссылка на задачу jar
    bundledJrePath = 'jre'
    jvmOptions = [
            '--module-path', 'lib', // Укажите путь к JavaFX SDK
            '--add-modules', 'javafx.controls,javafx.fxml' // Укажите необходимые модули JavaFX
    ]
}

task addJreToDistributable(type: Copy) {
    from fileTree("../JRE") // Используем fileTree, если JRE — это директория
    into file("$buildDir/launch4j/jre") // Указываем директорию назначения
    doLast {
        println "JRE copied to $buildDir/launch4j"
    }
}

task packageExecutableDistribution(type: Zip) {
    from "$buildDir/launch4j" // Архивируем содержимое папки launch4j
    archiveFileName = "distribution.zip" // Имя архива
    destinationDirectory = file("$buildDir/distributions") // Куда положить архив
}

// Устанавливаем зависимость
tasks.createExe.dependsOn addJreToDistributable // Копируем JRE перед созданием .exe
tasks.createExe.finalizedBy packageExecutableDistribution

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE // Handle duplicate entries
    manifest {
        attributes 'Main-Class': 'simplexmetod.Control'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
